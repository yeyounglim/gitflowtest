name: Mysql Build and Push

on:
#  push:
#    branches:
#      [ "develop" ]
  workflow_dispatch:
    paths:
      - 'test-mysql/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        # 현재 리포지토리를 체크아웃합니다.

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        # Docker Buildx를 설정합니다.

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          # GitHub Secret에서 Docker Hub 사용자 이름을 가져옵니다.
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          # GitHub Secret에서 Docker Hub 액세스 토큰을 가져옵니다.

      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: ./test-mysql
          # Dockerfile이 있는 위치입니다.
          file: ./test-mysql/Dockerfile
          # Dockerfile의 경로입니다.
          push: true
          # 이미지를 레지스트리에 푸시합니다.
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/test-mysql
          # :${{ github.sha }}
          platforms: linux/amd64,linux/arm64
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: NCP login and docker image pull and run start
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          password: ${{ secrets.NCP_PASSWORD }}
          port: ${{ secrets.NCP_PORT }}
          script: |
            cd /root/compose
            sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            sudo docker-compose -f docker-compose.yml down --rmi all
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/test-mysql
            sudo docker-compose -f docker-compose.yml up -d
#name: Mysql Build and Push
#
#on:
#  push:
#    branches:
#      - develop
#    paths:
#      - 'test-mysql/**'
#
#jobs:
#  build-and-push:
#    runs-on: ubuntu-latest
##    ubuntu-latest
#
#    steps:
#    - name: Checkout Repository
#      uses: actions/checkout@v2
#      # 현재 리포지토리를 체크아웃합니다.
#
#    - name: Set up Docker Buildx
#      uses: docker/setup-buildx-action@v1
#      # Docker Buildx를 설정합니다.
#
#    - name: Login to Docker Hub
#      uses: docker/login-action@v1
#      with:
#        username: ${{ secrets.DOCKERHUB_USERNAME }}
#        # GitHub Secret에서 Docker Hub 사용자 이름을 가져옵니다.
#        password: ${{ secrets.DOCKERHUB_TOKEN }}
#        # GitHub Secret에서 Docker Hub 액세스 토큰을 가져옵니다.
#
#    - name: Build and Push
#      uses: docker/build-push-action@v2
#      with:
#        context: ./test-mysql
#        # Dockerfile이 있는 위치입니다.
#        file: ./test-mysql/Dockerfile
#        # Dockerfile의 경로입니다.
#        push: true
#        # 이미지를 레지스트리에 푸시합니다.
#        tags: ${{ secrets.DOCKERHUB_USERNAME }}/test-mysql
#        #:${{ github.sha }}
#        platforms: linux/amd64,linux/arm64
#
#  deploy:
#    # needs를 통해 build job이 수행 성공시에 작업되도록 설정
#    needs: build-and-push
#    runs-on: ubuntu-latest
#
#    steps:
#      # NCP 로그인 / docker image pull & run
#      - name: NCP login and docker image pull and run start
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.NCP_HOST }}
#          username: ${{ secrets.NCP_USERNAME }}
#          password: ${{ secrets.NCP_PASSWORD }}
#          port: ${{ secrets.NCP_PORT }}
#
#          script: |
#            cd /root/compose
#            sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
#            sudo docker-compose -f docker-compose.yml down --rmi all
#            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/test-mysql
#            sudo docker-compose -f docker-compose.yml up -d
